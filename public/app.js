// Generated by LiveScript 1.2.0
var Vue, Request, _, a, Moment, Page, toString$ = {}.toString;
Vue = require('vue');
Vue.config.debug = true;
Request = require('superagent');
_ = require('prelude-ls-extended');
a = _.a;
Moment = require('moment');
Page = require('page');
require('./app.css');
function syntaxHighlight(e){return"string"!=typeof e&&(e=JSON.stringify(e,void 0,2)),e=e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;"),e.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g,function(e){var t="number";return/^"/.test(e)?t=/:$/.test(e)?"key":"string":/true|false/.test(e)?t="boolean":/null/.test(e)&&(t="null"),'<span class="'+t+'">'+e+"</span>"})}
window.app = new Vue({
  el: '#app',
  data: {
    info: {
      counts: {},
      queues: []
    },
    jobs: [],
    filter: {
      where: {
        state: void 8,
        type: void 8
      }
    }
  },
  ready: function(){
    this.reload();
    setInterval(this.reload, 2000);
  },
  methods: {
    syntaxHighlight: function(it){
      return syntaxHighlight(toString$.call(it).slice(8, -1) === 'Object' ? JSON.stringify(it, void 8, 1) : it);
    },
    changeWhere: function(_where){
      import$(this.filter.where, _where);
      Page("/" + JSON.stringify(this.filter));
    },
    reload: function(){
      Request.post('/info', this.filter).end(function(err, res){
        app.info = res.body;
      });
      Request.post('/view', this.filter).end(function(err, res){
        var i$, ref$, len$, job, j$, ref1$, len1$, log;
        for (i$ = 0, len$ = (ref$ = res.body).length; i$ < len$; ++i$) {
          job = ref$[i$];
          job.timestamp = Moment(job.timestamp).fromNow();
          if (job.logs) {
            for (j$ = 0, len1$ = (ref1$ = job.logs).length; j$ < len1$; ++j$) {
              log = ref1$[j$];
              log.t = Moment(log.t).fromNow();
            }
          }
        }
        app.jobs = res.body;
      });
    }
  }
});
Page.base('/#');
Page('/:filter', function(it){
  var filter, e;
  try {
    filter = JSON.parse(it.params.filter);
    if (!filter.where) {
      return Page.redirect('/{"where":{}}');
    }
    app.filter = filter;
    app.reload();
  } catch (e$) {
    e = e$;
    Page.redirect('/{"where":{}}');
  }
});
Page('*', function(it){
  console.log(it);
  Page.redirect('/{"where":{}}');
});
Page();
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}